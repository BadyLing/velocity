#!/usr/bin/env node

var fs = require('fs');
var path = require('path');
var commander = require('commander');
var colorful = require('colorful');

var pkg = require('../package');
var vmx = require('../index')
var logger = require('../lib/logger');

var cwd = process.cwd();


commander
  .description(pkg.description)
  .option('-v, --version', 'output version number')
  .option('-r, --recursive', 'do recursively')
  .option('-R, --reverse', 'view all files include specified file')
  .option('-d, --debug', 'show debug message')
  .option('-D, --directives <s>', 'directives relate to file including', split)
  .option('-o, --roots <s>', 'template roots', split)
  .option('-t, --to <s>', 'path to save the translated files')
  .option('-T, --template <s>', 'be used with "-t", specifies target template language')
  .option('-e, --encoding <s>', 'encoding')
  .on('version', function() {
    console.log('\n  ' + colorful.cyan(pkg.version) + '\n');
    process.exit(0);
  }).helpInformation = helpInfo;

commander.parse(process.argv);


var conf = {};

['recursive', 'reverse', 'directives', 'to', 'template'].forEach(function(item) {
  if (commander[item]) {
    conf[item] = commander[item];
  }
});

commander.args.forEach(function(item) {
  if (fs.existsSync(item)) {
    if (fs.statSync(item).isFile()) {
      conf.file = item;
    } else if (fs.statSync(item).isDirectory()) {
      conf.dir = item;
    } 
  } else if (/^[a-zA-z][0-9z-zA-Z-_]*$/.test(item)) {
    conf.variable = item;
  } else {
    logger.warn('Not recognized option<', item, '>.');
  }
});

vmx(conf);


function helpInfo() {
  return [
    '',
    colorful.cyan('  ' + this.description()),
    '',
    colorful.green('  Usage:'),
    '    ' + this._name + ' [file.vm] [dir] [variable] ' + this.usage(),
    '',
    colorful.green('  Options:'),
    '' + this.optionHelp().replace(/^/gm, '    '),
    '',
    colorful.green('  More Info:'),
    '    ' + colorful.underline('https://github.com/fool2fish/vmx'),
    '',
    ''
  ].join('\n');
}


function split(raw) {
  return raw.split(',');
}


