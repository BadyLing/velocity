#!/usr/bin/env node

var fs = require('fs')
var path = require('path')
var commander = require('commander')
var colorful = require('colorful')
var utilx = require('utilx')

var pkg = require('../package')
var velocity = require('..')
var logger = require('../lib/logger')

var cwd = process.cwd()


commander
  .description(pkg.description)
  .option('-v, --version',      'output version number')
  .option('-d, --debug',        'show debug message')
  .option('-C, --config <s>',   'config file')
  .option('-O, --root <s>',     'template root path', utilx.split)
  .option('-M, --macro <s>',    'global macro file/input', utilx.split)
  .option('-t, --template <s>', 'template file/input')
  .option('-c, --context <s>',  'context file/input')
  .option('-o, --output <s>',   'output file path')
  .option('-e, --encoding <s>', 'encoding')
  .option('-R, --reverse',      'view reversed dependencies')
  .option('-S, --server [s]',   'start a simple http server')
  .option('--data',             'extract data structure from template')
  .option('--intermediate',     'generate an intermediate template to get assigned data structure')
  .on('version', function() {
    console.log('\n  ' + colorful.cyan(pkg.version) + '\n')
    process.exit(0)
  })
  .helpInformation = utilx.cGetHelp(pkg)

  
commander.parse(process.argv)


var cfg = utilx.cGetCfg(commander)


if (cfg.data) {
  var data = new velocity.Data(cfg)
  var result = data.extract(cfg.context)
  if (!cfg.output)
    console.log(require('util').inspect(result, {depth: null}))
  
} else {
  if (cfg.context) {
    if (cfg.server) {
      velocity.server(cfg)
     
    } else {
      var engine = new velocity.Engine(cfg)
      var result = engine.render(cfg.context)
      console.log(result)
    }

  } else {
    velocity.dep(cfg, true)
  }
}


